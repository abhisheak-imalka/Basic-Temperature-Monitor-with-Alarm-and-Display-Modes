
Tsak02.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000d0c  00000da0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080010e  0080010e  00000dae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000dae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000de0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000e20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fbc  00000000  00000000  00000e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000779  00000000  00000000  00001e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000679  00000000  00000000  000025a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00002c20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000403  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e4a  00000000  00000000  0000321f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00004069  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 66 00 	jmp	0xcc	; 0xcc <__vector_1>
   8:	0c 94 b4 00 	jmp	0x168	; 0x168 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e0       	ldi	r30, 0x0C	; 12
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 31       	cpi	r26, 0x16	; 22
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 55 04 	call	0x8aa	; 0x8aa <main>
  9e:	0c 94 84 06 	jmp	0xd08	; 0xd08 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setup>:
char F =0b01110001;
float b =32;

void setup()
{
	DDRC=0xff;
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	87 b9       	out	0x07, r24	; 7
	DDRB = 0xff;
  aa:	84 b9       	out	0x04, r24	; 4
	DDRD =0x00;
  ac:	1a b8       	out	0x0a, r1	; 10
	DDRD &= ~(1 << BUTTON_PIN)&(1<<BUTTON_PIN2)&(1<<BUTTON_PIN3);
  ae:	8a b1       	in	r24, 0x0a	; 10
  b0:	1a b8       	out	0x0a, r1	; 10
	PORTD |=(1<<BUTTON_PIN)|(1<<BUTTON_PIN2)|(1<<BUTTON_PIN3);
  b2:	8b b1       	in	r24, 0x0b	; 11
  b4:	8c 61       	ori	r24, 0x1C	; 28
  b6:	8b b9       	out	0x0b, r24	; 11

	
	
	
	// Enable external interrupt INT0
	EIMSK |= (1 << INT0)|(1<<INT1);
  b8:	8d b3       	in	r24, 0x1d	; 29
  ba:	83 60       	ori	r24, 0x03	; 3
  bc:	8d bb       	out	0x1d, r24	; 29
	
	// Trigger on falling edge for INT0
	EICRA |= (1 << ISC01)|(1<<ISC11);
  be:	e9 e6       	ldi	r30, 0x69	; 105
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8a 60       	ori	r24, 0x0A	; 10
  c6:	80 83       	st	Z, r24
	
	// Enable global interrupts
	sei();
  c8:	78 94       	sei
  ca:	08 95       	ret

000000cc <__vector_1>:
	
	
}

ISR(INT0_vect)
{
  cc:	1f 92       	push	r1
  ce:	0f 92       	push	r0
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	0f 92       	push	r0
  d4:	11 24       	eor	r1, r1
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	// Toggle the LED state
	count++;
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	40 e8       	ldi	r20, 0x80	; 128
  f4:	5f e3       	ldi	r21, 0x3F	; 63
  f6:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <count>
  fa:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <count+0x1>
  fe:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <count+0x2>
 102:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <count+0x3>
 106:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__addsf3>
 10a:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <count>
 10e:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <count+0x1>
 112:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <count+0x2>
 116:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <count+0x3>
	resetvalue++;
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	40 e8       	ldi	r20, 0x80	; 128
 120:	5f e3       	ldi	r21, 0x3F	; 63
 122:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 126:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 12a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 12e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 132:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__addsf3>
 136:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <__data_end>
 13a:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <__data_end+0x1>
 13e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>
 142:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
	
	

}
 146:	ff 91       	pop	r31
 148:	ef 91       	pop	r30
 14a:	bf 91       	pop	r27
 14c:	af 91       	pop	r26
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	7f 91       	pop	r23
 154:	6f 91       	pop	r22
 156:	5f 91       	pop	r21
 158:	4f 91       	pop	r20
 15a:	3f 91       	pop	r19
 15c:	2f 91       	pop	r18
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <__vector_2>:
ISR(INT1_vect){
 168:	1f 92       	push	r1
 16a:	0f 92       	push	r0
 16c:	0f b6       	in	r0, 0x3f	; 63
 16e:	0f 92       	push	r0
 170:	11 24       	eor	r1, r1
 172:	cf 92       	push	r12
 174:	df 92       	push	r13
 176:	ef 92       	push	r14
 178:	ff 92       	push	r15
 17a:	2f 93       	push	r18
 17c:	3f 93       	push	r19
 17e:	4f 93       	push	r20
 180:	5f 93       	push	r21
 182:	6f 93       	push	r22
 184:	7f 93       	push	r23
 186:	8f 93       	push	r24
 188:	9f 93       	push	r25
 18a:	af 93       	push	r26
 18c:	bf 93       	push	r27
 18e:	ef 93       	push	r30
 190:	ff 93       	push	r31

	if (count>0)
 192:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <count>
 196:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <count+0x1>
 19a:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <count+0x2>
 19e:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <count+0x3>
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e0       	ldi	r19, 0x00	; 0
 1a6:	a9 01       	movw	r20, r18
 1a8:	c7 01       	movw	r24, r14
 1aa:	b6 01       	movw	r22, r12
 1ac:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__gesf2>
 1b0:	18 16       	cp	r1, r24
 1b2:	84 f4       	brge	.+32     	; 0x1d4 <__vector_2+0x6c>
	{
		count--;
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	40 e8       	ldi	r20, 0x80	; 128
 1ba:	5f e3       	ldi	r21, 0x3F	; 63
 1bc:	c7 01       	movw	r24, r14
 1be:	b6 01       	movw	r22, r12
 1c0:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__subsf3>
 1c4:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <count>
 1c8:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <count+0x1>
 1cc:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <count+0x2>
 1d0:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <count+0x3>
		
		
	}

}
 1d4:	ff 91       	pop	r31
 1d6:	ef 91       	pop	r30
 1d8:	bf 91       	pop	r27
 1da:	af 91       	pop	r26
 1dc:	9f 91       	pop	r25
 1de:	8f 91       	pop	r24
 1e0:	7f 91       	pop	r23
 1e2:	6f 91       	pop	r22
 1e4:	5f 91       	pop	r21
 1e6:	4f 91       	pop	r20
 1e8:	3f 91       	pop	r19
 1ea:	2f 91       	pop	r18
 1ec:	ff 90       	pop	r15
 1ee:	ef 90       	pop	r14
 1f0:	df 90       	pop	r13
 1f2:	cf 90       	pop	r12
 1f4:	0f 90       	pop	r0
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	0f 90       	pop	r0
 1fa:	1f 90       	pop	r1
 1fc:	18 95       	reti

000001fe <displayCellsius>:
void displayCellsius(float count){
 1fe:	2f 92       	push	r2
 200:	3f 92       	push	r3
 202:	4f 92       	push	r4
 204:	5f 92       	push	r5
 206:	6f 92       	push	r6
 208:	7f 92       	push	r7
 20a:	8f 92       	push	r8
 20c:	9f 92       	push	r9
 20e:	af 92       	push	r10
 210:	bf 92       	push	r11
 212:	cf 92       	push	r12
 214:	df 92       	push	r13
 216:	ef 92       	push	r14
 218:	ff 92       	push	r15
 21a:	0f 93       	push	r16
 21c:	1f 93       	push	r17
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	00 d0       	rcall	.+0      	; 0x224 <displayCellsius+0x26>
 224:	cd b7       	in	r28, 0x3d	; 61
 226:	de b7       	in	r29, 0x3e	; 62
 228:	4b 01       	movw	r8, r22
 22a:	5c 01       	movw	r10, r24
for(int i; i<20;i++){
 22c:	00 e0       	ldi	r16, 0x00	; 0
 22e:	10 e0       	ldi	r17, 0x00	; 0
	else if (count<1000)
	{
		int givenNumber =count*10;
		int decimalPart = givenNumber % 10;
		
		PORTC = (1<<sw1);
 230:	55 24       	eor	r5, r5
 232:	53 94       	inc	r5
		PORTB = num[givenNumber/1000 %10];
 234:	0f 2e       	mov	r0, r31
 236:	f8 ee       	ldi	r31, 0xE8	; 232
 238:	cf 2e       	mov	r12, r31
 23a:	f3 e0       	ldi	r31, 0x03	; 3
 23c:	df 2e       	mov	r13, r31
 23e:	f0 2d       	mov	r31, r0
		_delay_ms(200);
		
		PORTC =(1<<sw2);
 240:	68 94       	set
 242:	66 24       	eor	r6, r6
 244:	61 f8       	bld	r6, 1
		PORTB = num[givenNumber/100 %10];
 246:	0f 2e       	mov	r0, r31
 248:	f4 e6       	ldi	r31, 0x64	; 100
 24a:	2f 2e       	mov	r2, r31
 24c:	31 2c       	mov	r3, r1
 24e:	f0 2d       	mov	r31, r0
		_delay_ms(200);
		
		PORTC = (1<<sw3);
 250:	68 94       	set
 252:	77 24       	eor	r7, r7
 254:	72 f8       	bld	r7, 2
		PORTB |=(1<<decimalPoint);
		_delay_ms(66.67);
		PORTB &=~(1<<decimalPoint);
		_delay_ms(66.67);
		
		PORTC =(1<<sw4);
 256:	68 94       	set
 258:	44 24       	eor	r4, r4
 25a:	43 f8       	bld	r4, 3
	}

}
void displayCellsius(float count){
for(int i; i<20;i++){
	if (!(PIND & (1<<BUTTON_PIN3))){
 25c:	4c 99       	sbic	0x09, 4	; 9
 25e:	08 c0       	rjmp	.+16     	; 0x270 <displayCellsius+0x72>
		resetvalue =0;
 260:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
 264:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__data_end+0x1>
 268:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end+0x2>
 26c:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x3>
	}
	
	if (count<10)
 270:	20 e0       	ldi	r18, 0x00	; 0
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	40 e2       	ldi	r20, 0x20	; 32
 276:	51 e4       	ldi	r21, 0x41	; 65
 278:	c5 01       	movw	r24, r10
 27a:	b4 01       	movw	r22, r8
 27c:	0e 94 c8 04 	call	0x990	; 0x990 <__cmpsf2>
 280:	88 23       	and	r24, r24
 282:	0c f0       	brlt	.+2      	; 0x286 <displayCellsius+0x88>
 284:	67 c0       	rjmp	.+206    	; 0x354 <displayCellsius+0x156>
	{
		int givenNumber =count*1000;
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	4a e7       	ldi	r20, 0x7A	; 122
 28c:	54 e4       	ldi	r21, 0x44	; 68
 28e:	c5 01       	movw	r24, r10
 290:	b4 01       	movw	r22, r8
 292:	0e 94 ef 05 	call	0xbde	; 0xbde <__mulsf3>
 296:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__fixsfsi>
		int decimalPart = givenNumber % 1000;
 29a:	cb 01       	movw	r24, r22
 29c:	b6 01       	movw	r22, r12
 29e:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 2a2:	9c 01       	movw	r18, r24
		
		
		PORTC =(1<<sw1);
 2a4:	58 b8       	out	0x08, r5	; 8
		PORTB = num[givenNumber/1000 %10];
 2a6:	cb 01       	movw	r24, r22
 2a8:	6a e0       	ldi	r22, 0x0A	; 10
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 2b0:	fc 01       	movw	r30, r24
 2b2:	ec 5f       	subi	r30, 0xFC	; 252
 2b4:	fe 4f       	sbci	r31, 0xFE	; 254
 2b6:	80 81       	ld	r24, Z
 2b8:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ba:	8f e3       	ldi	r24, 0x3F	; 63
 2bc:	9c e9       	ldi	r25, 0x9C	; 156
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <displayCellsius+0xc0>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <displayCellsius+0xc6>
 2c4:	00 00       	nop
		_delay_ms(160);
		PORTB |=(1<<decimalPoint);
 2c6:	2c 9a       	sbi	0x05, 4	; 5
 2c8:	8f e1       	ldi	r24, 0x1F	; 31
 2ca:	9e e4       	ldi	r25, 0x4E	; 78
 2cc:	01 97       	sbiw	r24, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <displayCellsius+0xce>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <displayCellsius+0xd4>
 2d2:	00 00       	nop
		_delay_ms(80);
		PORTB &=~(1<<decimalPoint);
 2d4:	2c 98       	cbi	0x05, 4	; 5
 2d6:	8f e1       	ldi	r24, 0x1F	; 31
 2d8:	9e e4       	ldi	r25, 0x4E	; 78
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <displayCellsius+0xdc>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <displayCellsius+0xe2>
 2e0:	00 00       	nop
		_delay_ms(80);
		
		
		
		PORTC = (1<<sw2);
 2e2:	68 b8       	out	0x08, r6	; 8
		PORTB = num[decimalPart/100 %10];
 2e4:	c9 01       	movw	r24, r18
 2e6:	b1 01       	movw	r22, r2
 2e8:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 2ec:	cb 01       	movw	r24, r22
 2ee:	6a e0       	ldi	r22, 0x0A	; 10
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 2f6:	fc 01       	movw	r30, r24
 2f8:	ec 5f       	subi	r30, 0xFC	; 252
 2fa:	fe 4f       	sbci	r31, 0xFE	; 254
 2fc:	80 81       	ld	r24, Z
 2fe:	85 b9       	out	0x05, r24	; 5
 300:	8f e4       	ldi	r24, 0x4F	; 79
 302:	93 ec       	ldi	r25, 0xC3	; 195
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <displayCellsius+0x106>
 308:	00 c0       	rjmp	.+0      	; 0x30a <displayCellsius+0x10c>
 30a:	00 00       	nop
		_delay_ms(200);
		PORTC = (1<<sw3);
 30c:	78 b8       	out	0x08, r7	; 8
		PORTB = num[decimalPart/10 %10];
 30e:	c9 01       	movw	r24, r18
 310:	6a e0       	ldi	r22, 0x0A	; 10
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 318:	9c 01       	movw	r18, r24
 31a:	cb 01       	movw	r24, r22
 31c:	6a e0       	ldi	r22, 0x0A	; 10
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 324:	fc 01       	movw	r30, r24
 326:	ec 5f       	subi	r30, 0xFC	; 252
 328:	fe 4f       	sbci	r31, 0xFE	; 254
 32a:	80 81       	ld	r24, Z
 32c:	85 b9       	out	0x05, r24	; 5
 32e:	8f e4       	ldi	r24, 0x4F	; 79
 330:	93 ec       	ldi	r25, 0xC3	; 195
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <displayCellsius+0x134>
 336:	00 c0       	rjmp	.+0      	; 0x338 <displayCellsius+0x13a>
 338:	00 00       	nop
		_delay_ms(200);
		PORTC = (1<<sw4);
 33a:	48 b8       	out	0x08, r4	; 8
		PORTB = num[decimalPart/1 %10];
 33c:	f9 01       	movw	r30, r18
 33e:	ec 5f       	subi	r30, 0xFC	; 252
 340:	fe 4f       	sbci	r31, 0xFE	; 254
 342:	80 81       	ld	r24, Z
 344:	85 b9       	out	0x05, r24	; 5
 346:	8f e4       	ldi	r24, 0x4F	; 79
 348:	93 ec       	ldi	r25, 0xC3	; 195
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <displayCellsius+0x14c>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <displayCellsius+0x152>
 350:	00 00       	nop
 352:	00 c1       	rjmp	.+512    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
		
		
		
		
	}
	else if (count<100 )
 354:	20 e0       	ldi	r18, 0x00	; 0
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	48 ec       	ldi	r20, 0xC8	; 200
 35a:	52 e4       	ldi	r21, 0x42	; 66
 35c:	c5 01       	movw	r24, r10
 35e:	b4 01       	movw	r22, r8
 360:	0e 94 c8 04 	call	0x990	; 0x990 <__cmpsf2>
 364:	88 23       	and	r24, r24
 366:	0c f0       	brlt	.+2      	; 0x36a <displayCellsius+0x16c>
 368:	82 c0       	rjmp	.+260    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
	{
		int givenNumber =count*100;
 36a:	20 e0       	ldi	r18, 0x00	; 0
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	48 ec       	ldi	r20, 0xC8	; 200
 370:	52 e4       	ldi	r21, 0x42	; 66
 372:	c5 01       	movw	r24, r10
 374:	b4 01       	movw	r22, r8
 376:	0e 94 ef 05 	call	0xbde	; 0xbde <__mulsf3>
 37a:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__fixsfsi>
 37e:	7b 01       	movw	r14, r22
		int decimalPart = givenNumber % 100;
 380:	cb 01       	movw	r24, r22
 382:	b1 01       	movw	r22, r2
 384:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 388:	9a 83       	std	Y+2, r25	; 0x02
 38a:	89 83       	std	Y+1, r24	; 0x01
		if (resetvalue>40)
 38c:	20 e0       	ldi	r18, 0x00	; 0
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	40 e2       	ldi	r20, 0x20	; 32
 392:	52 e4       	ldi	r21, 0x42	; 66
 394:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 398:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 39c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 3a0:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 3a4:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__gesf2>
 3a8:	18 16       	cp	r1, r24
 3aa:	54 f4       	brge	.+20     	; 0x3c0 <displayCellsius+0x1c2>
		{
			PORTC ^=(1<<Led_Light);
 3ac:	88 b1       	in	r24, 0x08	; 8
 3ae:	90 e1       	ldi	r25, 0x10	; 16
 3b0:	89 27       	eor	r24, r25
 3b2:	88 b9       	out	0x08, r24	; 8
 3b4:	87 ea       	ldi	r24, 0xA7	; 167
 3b6:	91 e6       	ldi	r25, 0x61	; 97
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <displayCellsius+0x1ba>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <displayCellsius+0x1c0>
 3be:	00 00       	nop
			_delay_ms(100);
			
		}
		
		
		PORTC =(1<<sw1);
 3c0:	58 b8       	out	0x08, r5	; 8
		PORTB = num[givenNumber/1000 %10];
 3c2:	c7 01       	movw	r24, r14
 3c4:	b6 01       	movw	r22, r12
 3c6:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 3ca:	cb 01       	movw	r24, r22
 3cc:	6a e0       	ldi	r22, 0x0A	; 10
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 3d4:	fc 01       	movw	r30, r24
 3d6:	ec 5f       	subi	r30, 0xFC	; 252
 3d8:	fe 4f       	sbci	r31, 0xFE	; 254
 3da:	80 81       	ld	r24, Z
 3dc:	85 b9       	out	0x05, r24	; 5
 3de:	8f e4       	ldi	r24, 0x4F	; 79
 3e0:	93 ec       	ldi	r25, 0xC3	; 195
 3e2:	01 97       	sbiw	r24, 0x01	; 1
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <displayCellsius+0x1e4>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <displayCellsius+0x1ea>
 3e8:	00 00       	nop
		_delay_ms(200);
		
		PORTC=(1<<sw2);
 3ea:	68 b8       	out	0x08, r6	; 8
		PORTB = num[givenNumber/100 %10];
 3ec:	c7 01       	movw	r24, r14
 3ee:	b1 01       	movw	r22, r2
 3f0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 3f4:	cb 01       	movw	r24, r22
 3f6:	6a e0       	ldi	r22, 0x0A	; 10
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 3fe:	fc 01       	movw	r30, r24
 400:	ec 5f       	subi	r30, 0xFC	; 252
 402:	fe 4f       	sbci	r31, 0xFE	; 254
 404:	80 81       	ld	r24, Z
 406:	85 b9       	out	0x05, r24	; 5
 408:	87 ec       	ldi	r24, 0xC7	; 199
 40a:	9f ea       	ldi	r25, 0xAF	; 175
 40c:	01 97       	sbiw	r24, 0x01	; 1
 40e:	f1 f7       	brne	.-4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 410:	00 c0       	rjmp	.+0      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 412:	00 00       	nop
		_delay_ms(180);
		PORTB |=(1<<decimalPoint);
 414:	2c 9a       	sbi	0x05, 4	; 5
 416:	8f e0       	ldi	r24, 0x0F	; 15
 418:	97 e2       	ldi	r25, 0x27	; 39
 41a:	01 97       	sbiw	r24, 0x01	; 1
 41c:	f1 f7       	brne	.-4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 420:	00 00       	nop
		_delay_ms(40);
		PORTB &=~(1<<decimalPoint);
 422:	2c 98       	cbi	0x05, 4	; 5
		//_delay_ms(80);
		
		PORTC=(1<<sw3);
 424:	78 b8       	out	0x08, r7	; 8
		PORTB = num[decimalPart/10 %10];
 426:	89 81       	ldd	r24, Y+1	; 0x01
 428:	9a 81       	ldd	r25, Y+2	; 0x02
 42a:	6a e0       	ldi	r22, 0x0A	; 10
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 432:	9c 01       	movw	r18, r24
 434:	cb 01       	movw	r24, r22
 436:	6a e0       	ldi	r22, 0x0A	; 10
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 43e:	fc 01       	movw	r30, r24
 440:	ec 5f       	subi	r30, 0xFC	; 252
 442:	fe 4f       	sbci	r31, 0xFE	; 254
 444:	80 81       	ld	r24, Z
 446:	85 b9       	out	0x05, r24	; 5
 448:	8f e4       	ldi	r24, 0x4F	; 79
 44a:	93 ec       	ldi	r25, 0xC3	; 195
 44c:	01 97       	sbiw	r24, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 452:	00 00       	nop
		_delay_ms(200);
		PORTC =(1<<sw4);
 454:	48 b8       	out	0x08, r4	; 8
		PORTB = num[decimalPart/1 %10];
 456:	f9 01       	movw	r30, r18
 458:	ec 5f       	subi	r30, 0xFC	; 252
 45a:	fe 4f       	sbci	r31, 0xFE	; 254
 45c:	80 81       	ld	r24, Z
 45e:	85 b9       	out	0x05, r24	; 5
 460:	8f e4       	ldi	r24, 0x4F	; 79
 462:	93 ec       	ldi	r25, 0xC3	; 195
 464:	01 97       	sbiw	r24, 0x01	; 1
 466:	f1 f7       	brne	.-4      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 468:	00 c0       	rjmp	.+0      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 46a:	00 00       	nop
 46c:	73 c0       	rjmp	.+230    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
		_delay_ms(200);
		
	}
	else if (count<1000)
 46e:	20 e0       	ldi	r18, 0x00	; 0
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	4a e7       	ldi	r20, 0x7A	; 122
 474:	54 e4       	ldi	r21, 0x44	; 68
 476:	c5 01       	movw	r24, r10
 478:	b4 01       	movw	r22, r8
 47a:	0e 94 c8 04 	call	0x990	; 0x990 <__cmpsf2>
 47e:	88 23       	and	r24, r24
 480:	0c f0       	brlt	.+2      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 482:	68 c0       	rjmp	.+208    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
	{
		int givenNumber =count*10;
 484:	20 e0       	ldi	r18, 0x00	; 0
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	40 e2       	ldi	r20, 0x20	; 32
 48a:	51 e4       	ldi	r21, 0x41	; 65
 48c:	c5 01       	movw	r24, r10
 48e:	b4 01       	movw	r22, r8
 490:	0e 94 ef 05 	call	0xbde	; 0xbde <__mulsf3>
 494:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__fixsfsi>
 498:	9b 01       	movw	r18, r22
		int decimalPart = givenNumber % 10;
		
		PORTC = (1<<sw1);
 49a:	58 b8       	out	0x08, r5	; 8
		PORTB = num[givenNumber/1000 %10];
 49c:	cb 01       	movw	r24, r22
 49e:	b6 01       	movw	r22, r12
 4a0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 4a4:	cb 01       	movw	r24, r22
 4a6:	6a e0       	ldi	r22, 0x0A	; 10
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 4ae:	fc 01       	movw	r30, r24
 4b0:	ec 5f       	subi	r30, 0xFC	; 252
 4b2:	fe 4f       	sbci	r31, 0xFE	; 254
 4b4:	80 81       	ld	r24, Z
 4b6:	85 b9       	out	0x05, r24	; 5
 4b8:	8f e4       	ldi	r24, 0x4F	; 79
 4ba:	93 ec       	ldi	r25, 0xC3	; 195
 4bc:	01 97       	sbiw	r24, 0x01	; 1
 4be:	f1 f7       	brne	.-4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4c2:	00 00       	nop
		_delay_ms(200);
		
		PORTC =(1<<sw2);
 4c4:	68 b8       	out	0x08, r6	; 8
		PORTB = num[givenNumber/100 %10];
 4c6:	c9 01       	movw	r24, r18
 4c8:	b1 01       	movw	r22, r2
 4ca:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 4ce:	cb 01       	movw	r24, r22
 4d0:	6a e0       	ldi	r22, 0x0A	; 10
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 4d8:	fc 01       	movw	r30, r24
 4da:	ec 5f       	subi	r30, 0xFC	; 252
 4dc:	fe 4f       	sbci	r31, 0xFE	; 254
 4de:	80 81       	ld	r24, Z
 4e0:	85 b9       	out	0x05, r24	; 5
 4e2:	8f e4       	ldi	r24, 0x4F	; 79
 4e4:	93 ec       	ldi	r25, 0xC3	; 195
 4e6:	01 97       	sbiw	r24, 0x01	; 1
 4e8:	f1 f7       	brne	.-4      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4ec:	00 00       	nop
		_delay_ms(200);
		
		PORTC = (1<<sw3);
 4ee:	78 b8       	out	0x08, r7	; 8
		PORTB = num[givenNumber/10 %10];
 4f0:	c9 01       	movw	r24, r18
 4f2:	6a e0       	ldi	r22, 0x0A	; 10
 4f4:	70 e0       	ldi	r23, 0x00	; 0
 4f6:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 4fa:	9c 01       	movw	r18, r24
 4fc:	cb 01       	movw	r24, r22
 4fe:	6a e0       	ldi	r22, 0x0A	; 10
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 506:	fc 01       	movw	r30, r24
 508:	ec 5f       	subi	r30, 0xFC	; 252
 50a:	fe 4f       	sbci	r31, 0xFE	; 254
 50c:	80 81       	ld	r24, Z
 50e:	85 b9       	out	0x05, r24	; 5
 510:	8b e1       	ldi	r24, 0x1B	; 27
 512:	91 e4       	ldi	r25, 0x41	; 65
 514:	01 97       	sbiw	r24, 0x01	; 1
 516:	f1 f7       	brne	.-4      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 518:	00 00       	nop
		_delay_ms(66.67);
		PORTB |=(1<<decimalPoint);
 51a:	2c 9a       	sbi	0x05, 4	; 5
 51c:	8b e1       	ldi	r24, 0x1B	; 27
 51e:	91 e4       	ldi	r25, 0x41	; 65
 520:	01 97       	sbiw	r24, 0x01	; 1
 522:	f1 f7       	brne	.-4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 524:	00 00       	nop
		_delay_ms(66.67);
		PORTB &=~(1<<decimalPoint);
 526:	2c 98       	cbi	0x05, 4	; 5
 528:	8b e1       	ldi	r24, 0x1B	; 27
 52a:	91 e4       	ldi	r25, 0x41	; 65
 52c:	01 97       	sbiw	r24, 0x01	; 1
 52e:	f1 f7       	brne	.-4      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 530:	00 00       	nop
		_delay_ms(66.67);
		
		PORTC =(1<<sw4);
 532:	48 b8       	out	0x08, r4	; 8
		PORTB = num[decimalPart/1 %10];
 534:	c9 01       	movw	r24, r18
 536:	6a e0       	ldi	r22, 0x0A	; 10
 538:	70 e0       	ldi	r23, 0x00	; 0
 53a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 53e:	fc 01       	movw	r30, r24
 540:	ec 5f       	subi	r30, 0xFC	; 252
 542:	fe 4f       	sbci	r31, 0xFE	; 254
 544:	80 81       	ld	r24, Z
 546:	85 b9       	out	0x05, r24	; 5
 548:	8f e4       	ldi	r24, 0x4F	; 79
 54a:	93 ec       	ldi	r25, 0xC3	; 195
 54c:	01 97       	sbiw	r24, 0x01	; 1
 54e:	f1 f7       	brne	.-4      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 550:	00 c0       	rjmp	.+0      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 552:	00 00       	nop
		
	}

}
void displayCellsius(float count){
for(int i; i<20;i++){
 554:	0f 5f       	subi	r16, 0xFF	; 255
 556:	1f 4f       	sbci	r17, 0xFF	; 255
 558:	04 31       	cpi	r16, 0x14	; 20
 55a:	11 05       	cpc	r17, r1
 55c:	09 f0       	breq	.+2      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55e:	7e ce       	rjmp	.-772    	; 0x25c <displayCellsius+0x5e>
		
		
	}
}

}
 560:	0f 90       	pop	r0
 562:	0f 90       	pop	r0
 564:	df 91       	pop	r29
 566:	cf 91       	pop	r28
 568:	1f 91       	pop	r17
 56a:	0f 91       	pop	r16
 56c:	ff 90       	pop	r15
 56e:	ef 90       	pop	r14
 570:	df 90       	pop	r13
 572:	cf 90       	pop	r12
 574:	bf 90       	pop	r11
 576:	af 90       	pop	r10
 578:	9f 90       	pop	r9
 57a:	8f 90       	pop	r8
 57c:	7f 90       	pop	r7
 57e:	6f 90       	pop	r6
 580:	5f 90       	pop	r5
 582:	4f 90       	pop	r4
 584:	3f 90       	pop	r3
 586:	2f 90       	pop	r2
 588:	08 95       	ret

0000058a <displayFaran>:



void displayFaran(float b){
 58a:	2f 92       	push	r2
 58c:	3f 92       	push	r3
 58e:	4f 92       	push	r4
 590:	5f 92       	push	r5
 592:	6f 92       	push	r6
 594:	7f 92       	push	r7
 596:	8f 92       	push	r8
 598:	9f 92       	push	r9
 59a:	af 92       	push	r10
 59c:	bf 92       	push	r11
 59e:	cf 92       	push	r12
 5a0:	df 92       	push	r13
 5a2:	ef 92       	push	r14
 5a4:	ff 92       	push	r15
 5a6:	0f 93       	push	r16
 5a8:	1f 93       	push	r17
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	00 d0       	rcall	.+0      	; 0x5b0 <displayFaran+0x26>
 5b0:	cd b7       	in	r28, 0x3d	; 61
 5b2:	de b7       	in	r29, 0x3e	; 62
 5b4:	4b 01       	movw	r8, r22
 5b6:	5c 01       	movw	r10, r24
		
for(int j;j<20;j++){
 5b8:	00 e0       	ldi	r16, 0x00	; 0
 5ba:	10 e0       	ldi	r17, 0x00	; 0
			_delay_ms(100);
			
		}
	
		
		PORTC = (1<<sw1);
 5bc:	77 24       	eor	r7, r7
 5be:	73 94       	inc	r7
		PORTB = num[givenNumber/1000 %10];
 5c0:	0f 2e       	mov	r0, r31
 5c2:	f8 ee       	ldi	r31, 0xE8	; 232
 5c4:	2f 2e       	mov	r2, r31
 5c6:	f3 e0       	ldi	r31, 0x03	; 3
 5c8:	3f 2e       	mov	r3, r31
 5ca:	f0 2d       	mov	r31, r0
		_delay_ms(200);
		
		PORTC =(1<<sw2);
 5cc:	68 94       	set
 5ce:	66 24       	eor	r6, r6
 5d0:	61 f8       	bld	r6, 1
		PORTB = num[givenNumber/100 %10];
 5d2:	0f 2e       	mov	r0, r31
 5d4:	f4 e6       	ldi	r31, 0x64	; 100
 5d6:	cf 2e       	mov	r12, r31
 5d8:	d1 2c       	mov	r13, r1
 5da:	f0 2d       	mov	r31, r0
		_delay_ms(200);
		
		PORTC = (1<<sw3);
 5dc:	68 94       	set
 5de:	55 24       	eor	r5, r5
 5e0:	52 f8       	bld	r5, 2
		PORTB |=(1<<decimalPoint);
		_delay_ms(66.67);
		PORTB &=~(1<<decimalPoint);
		_delay_ms(66.67);
		
		PORTC =(1<<sw4);
 5e2:	68 94       	set
 5e4:	44 24       	eor	r4, r4
 5e6:	43 f8       	bld	r4, 3


void displayFaran(float b){
		
for(int j;j<20;j++){
	if (!(PIND & (1<<BUTTON_PIN3))){
 5e8:	4c 99       	sbic	0x09, 4	; 9
 5ea:	08 c0       	rjmp	.+16     	; 0x5fc <displayFaran+0x72>
		resetvalue=0;
 5ec:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
 5f0:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__data_end+0x1>
 5f4:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end+0x2>
 5f8:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x3>
	}


	if (b<100 )
 5fc:	20 e0       	ldi	r18, 0x00	; 0
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	48 ec       	ldi	r20, 0xC8	; 200
 602:	52 e4       	ldi	r21, 0x42	; 66
 604:	c5 01       	movw	r24, r10
 606:	b4 01       	movw	r22, r8
 608:	0e 94 c8 04 	call	0x990	; 0x990 <__cmpsf2>
 60c:	88 23       	and	r24, r24
 60e:	0c f0       	brlt	.+2      	; 0x612 <displayFaran+0x88>
 610:	62 c0       	rjmp	.+196    	; 0x6d6 <displayFaran+0x14c>
	{
		int givenNumber =b*100;
 612:	20 e0       	ldi	r18, 0x00	; 0
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	48 ec       	ldi	r20, 0xC8	; 200
 618:	52 e4       	ldi	r21, 0x42	; 66
 61a:	c5 01       	movw	r24, r10
 61c:	b4 01       	movw	r22, r8
 61e:	0e 94 ef 05 	call	0xbde	; 0xbde <__mulsf3>
 622:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__fixsfsi>
 626:	9b 01       	movw	r18, r22
		int decimalPart = givenNumber % 100;
 628:	cb 01       	movw	r24, r22
 62a:	b6 01       	movw	r22, r12
 62c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 630:	7b 01       	movw	r14, r22
 632:	fc 01       	movw	r30, r24
		
			
		PORTC =(1<<sw1);
 634:	78 b8       	out	0x08, r7	; 8
		PORTB = num[givenNumber/1000 %10];
 636:	c9 01       	movw	r24, r18
 638:	b1 01       	movw	r22, r2
 63a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 63e:	cb 01       	movw	r24, r22
 640:	6a e0       	ldi	r22, 0x0A	; 10
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 648:	dc 01       	movw	r26, r24
 64a:	ac 5f       	subi	r26, 0xFC	; 252
 64c:	be 4f       	sbci	r27, 0xFE	; 254
 64e:	8c 91       	ld	r24, X
 650:	85 b9       	out	0x05, r24	; 5
 652:	8f e4       	ldi	r24, 0x4F	; 79
 654:	93 ec       	ldi	r25, 0xC3	; 195
 656:	01 97       	sbiw	r24, 0x01	; 1
 658:	f1 f7       	brne	.-4      	; 0x656 <displayFaran+0xcc>
 65a:	00 c0       	rjmp	.+0      	; 0x65c <displayFaran+0xd2>
 65c:	00 00       	nop
		_delay_ms(200);
		
		PORTC =(1<<sw2);
 65e:	68 b8       	out	0x08, r6	; 8
		PORTB = num[givenNumber/100 %10];
 660:	c7 01       	movw	r24, r14
 662:	6a e0       	ldi	r22, 0x0A	; 10
 664:	70 e0       	ldi	r23, 0x00	; 0
 666:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 66a:	dc 01       	movw	r26, r24
 66c:	ac 5f       	subi	r26, 0xFC	; 252
 66e:	be 4f       	sbci	r27, 0xFE	; 254
 670:	8c 91       	ld	r24, X
 672:	85 b9       	out	0x05, r24	; 5
 674:	8f e3       	ldi	r24, 0x3F	; 63
 676:	9c e9       	ldi	r25, 0x9C	; 156
 678:	01 97       	sbiw	r24, 0x01	; 1
 67a:	f1 f7       	brne	.-4      	; 0x678 <displayFaran+0xee>
 67c:	00 c0       	rjmp	.+0      	; 0x67e <displayFaran+0xf4>
 67e:	00 00       	nop
		_delay_ms(160);
		PORTB |=(1<<decimalPoint);
 680:	2c 9a       	sbi	0x05, 4	; 5
 682:	83 e0       	ldi	r24, 0x03	; 3
 684:	95 e4       	ldi	r25, 0x45	; 69
 686:	01 97       	sbiw	r24, 0x01	; 1
 688:	f1 f7       	brne	.-4      	; 0x686 <displayFaran+0xfc>
 68a:	00 00       	nop
		_delay_ms(70.67);
		PORTB &=~(1<<decimalPoint);
 68c:	2c 98       	cbi	0x05, 4	; 5
		//_delay_ms(66.67);
		
		PORTC = (1<<sw3);
 68e:	58 b8       	out	0x08, r5	; 8
		PORTB = num[decimalPart/10 %10];
 690:	cf 01       	movw	r24, r30
 692:	6a e0       	ldi	r22, 0x0A	; 10
 694:	70 e0       	ldi	r23, 0x00	; 0
 696:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 69a:	9c 01       	movw	r18, r24
 69c:	cb 01       	movw	r24, r22
 69e:	6a e0       	ldi	r22, 0x0A	; 10
 6a0:	70 e0       	ldi	r23, 0x00	; 0
 6a2:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 6a6:	fc 01       	movw	r30, r24
 6a8:	ec 5f       	subi	r30, 0xFC	; 252
 6aa:	fe 4f       	sbci	r31, 0xFE	; 254
 6ac:	80 81       	ld	r24, Z
 6ae:	85 b9       	out	0x05, r24	; 5
 6b0:	8f e4       	ldi	r24, 0x4F	; 79
 6b2:	93 ec       	ldi	r25, 0xC3	; 195
 6b4:	01 97       	sbiw	r24, 0x01	; 1
 6b6:	f1 f7       	brne	.-4      	; 0x6b4 <displayFaran+0x12a>
 6b8:	00 c0       	rjmp	.+0      	; 0x6ba <displayFaran+0x130>
 6ba:	00 00       	nop
		_delay_ms(200);
		PORTC = (1<<sw4);
 6bc:	48 b8       	out	0x08, r4	; 8
		PORTB = num[decimalPart/1 %10];
 6be:	f9 01       	movw	r30, r18
 6c0:	ec 5f       	subi	r30, 0xFC	; 252
 6c2:	fe 4f       	sbci	r31, 0xFE	; 254
 6c4:	80 81       	ld	r24, Z
 6c6:	85 b9       	out	0x05, r24	; 5
 6c8:	8f e4       	ldi	r24, 0x4F	; 79
 6ca:	93 ec       	ldi	r25, 0xC3	; 195
 6cc:	01 97       	sbiw	r24, 0x01	; 1
 6ce:	f1 f7       	brne	.-4      	; 0x6cc <displayFaran+0x142>
 6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <displayFaran+0x148>
 6d2:	00 00       	nop
 6d4:	94 c0       	rjmp	.+296    	; 0x7fe <displayFaran+0x274>
		
	
		
		
	}
	else if (b<1000)
 6d6:	20 e0       	ldi	r18, 0x00	; 0
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	4a e7       	ldi	r20, 0x7A	; 122
 6dc:	54 e4       	ldi	r21, 0x44	; 68
 6de:	c5 01       	movw	r24, r10
 6e0:	b4 01       	movw	r22, r8
 6e2:	0e 94 c8 04 	call	0x990	; 0x990 <__cmpsf2>
 6e6:	88 23       	and	r24, r24
 6e8:	0c f0       	brlt	.+2      	; 0x6ec <displayFaran+0x162>
 6ea:	89 c0       	rjmp	.+274    	; 0x7fe <displayFaran+0x274>
	{
		int givenNumber =b*10;
 6ec:	20 e0       	ldi	r18, 0x00	; 0
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	40 e2       	ldi	r20, 0x20	; 32
 6f2:	51 e4       	ldi	r21, 0x41	; 65
 6f4:	c5 01       	movw	r24, r10
 6f6:	b4 01       	movw	r22, r8
 6f8:	0e 94 ef 05 	call	0xbde	; 0xbde <__mulsf3>
 6fc:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__fixsfsi>
 700:	7b 01       	movw	r14, r22
		int decimalPart = givenNumber % 10;
 702:	cb 01       	movw	r24, r22
 704:	6a e0       	ldi	r22, 0x0A	; 10
 706:	70 e0       	ldi	r23, 0x00	; 0
 708:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 70c:	9a 83       	std	Y+2, r25	; 0x02
 70e:	89 83       	std	Y+1, r24	; 0x01
		if (resetvalue>40)
 710:	20 e0       	ldi	r18, 0x00	; 0
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	40 e2       	ldi	r20, 0x20	; 32
 716:	52 e4       	ldi	r21, 0x42	; 66
 718:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 71c:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 720:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 724:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 728:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__gesf2>
 72c:	18 16       	cp	r1, r24
 72e:	54 f4       	brge	.+20     	; 0x744 <displayFaran+0x1ba>
		{
			PORTC ^=(1<<Led_Light);
 730:	88 b1       	in	r24, 0x08	; 8
 732:	90 e1       	ldi	r25, 0x10	; 16
 734:	89 27       	eor	r24, r25
 736:	88 b9       	out	0x08, r24	; 8
 738:	87 ea       	ldi	r24, 0xA7	; 167
 73a:	91 e6       	ldi	r25, 0x61	; 97
 73c:	01 97       	sbiw	r24, 0x01	; 1
 73e:	f1 f7       	brne	.-4      	; 0x73c <displayFaran+0x1b2>
 740:	00 c0       	rjmp	.+0      	; 0x742 <displayFaran+0x1b8>
 742:	00 00       	nop
			_delay_ms(100);
			
		}
	
		
		PORTC = (1<<sw1);
 744:	78 b8       	out	0x08, r7	; 8
		PORTB = num[givenNumber/1000 %10];
 746:	c7 01       	movw	r24, r14
 748:	b1 01       	movw	r22, r2
 74a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 74e:	cb 01       	movw	r24, r22
 750:	6a e0       	ldi	r22, 0x0A	; 10
 752:	70 e0       	ldi	r23, 0x00	; 0
 754:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 758:	fc 01       	movw	r30, r24
 75a:	ec 5f       	subi	r30, 0xFC	; 252
 75c:	fe 4f       	sbci	r31, 0xFE	; 254
 75e:	80 81       	ld	r24, Z
 760:	85 b9       	out	0x05, r24	; 5
 762:	8f e4       	ldi	r24, 0x4F	; 79
 764:	93 ec       	ldi	r25, 0xC3	; 195
 766:	01 97       	sbiw	r24, 0x01	; 1
 768:	f1 f7       	brne	.-4      	; 0x766 <displayFaran+0x1dc>
 76a:	00 c0       	rjmp	.+0      	; 0x76c <displayFaran+0x1e2>
 76c:	00 00       	nop
		_delay_ms(200);
		
		PORTC =(1<<sw2);
 76e:	68 b8       	out	0x08, r6	; 8
		PORTB = num[givenNumber/100 %10];
 770:	c7 01       	movw	r24, r14
 772:	b6 01       	movw	r22, r12
 774:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 778:	cb 01       	movw	r24, r22
 77a:	6a e0       	ldi	r22, 0x0A	; 10
 77c:	70 e0       	ldi	r23, 0x00	; 0
 77e:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 782:	fc 01       	movw	r30, r24
 784:	ec 5f       	subi	r30, 0xFC	; 252
 786:	fe 4f       	sbci	r31, 0xFE	; 254
 788:	80 81       	ld	r24, Z
 78a:	85 b9       	out	0x05, r24	; 5
 78c:	8f e4       	ldi	r24, 0x4F	; 79
 78e:	93 ec       	ldi	r25, 0xC3	; 195
 790:	01 97       	sbiw	r24, 0x01	; 1
 792:	f1 f7       	brne	.-4      	; 0x790 <displayFaran+0x206>
 794:	00 c0       	rjmp	.+0      	; 0x796 <displayFaran+0x20c>
 796:	00 00       	nop
		_delay_ms(200);
		
		PORTC = (1<<sw3);
 798:	58 b8       	out	0x08, r5	; 8
		PORTB = num[givenNumber/10 %10];
 79a:	c7 01       	movw	r24, r14
 79c:	6a e0       	ldi	r22, 0x0A	; 10
 79e:	70 e0       	ldi	r23, 0x00	; 0
 7a0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 7a4:	cb 01       	movw	r24, r22
 7a6:	6a e0       	ldi	r22, 0x0A	; 10
 7a8:	70 e0       	ldi	r23, 0x00	; 0
 7aa:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 7ae:	fc 01       	movw	r30, r24
 7b0:	ec 5f       	subi	r30, 0xFC	; 252
 7b2:	fe 4f       	sbci	r31, 0xFE	; 254
 7b4:	80 81       	ld	r24, Z
 7b6:	85 b9       	out	0x05, r24	; 5
 7b8:	8b e1       	ldi	r24, 0x1B	; 27
 7ba:	91 e4       	ldi	r25, 0x41	; 65
 7bc:	01 97       	sbiw	r24, 0x01	; 1
 7be:	f1 f7       	brne	.-4      	; 0x7bc <displayFaran+0x232>
 7c0:	00 00       	nop
		_delay_ms(66.67);
		PORTB |=(1<<decimalPoint);
 7c2:	2c 9a       	sbi	0x05, 4	; 5
 7c4:	8b e1       	ldi	r24, 0x1B	; 27
 7c6:	91 e4       	ldi	r25, 0x41	; 65
 7c8:	01 97       	sbiw	r24, 0x01	; 1
 7ca:	f1 f7       	brne	.-4      	; 0x7c8 <displayFaran+0x23e>
 7cc:	00 00       	nop
		_delay_ms(66.67);
		PORTB &=~(1<<decimalPoint);
 7ce:	2c 98       	cbi	0x05, 4	; 5
 7d0:	8b e1       	ldi	r24, 0x1B	; 27
 7d2:	91 e4       	ldi	r25, 0x41	; 65
 7d4:	01 97       	sbiw	r24, 0x01	; 1
 7d6:	f1 f7       	brne	.-4      	; 0x7d4 <displayFaran+0x24a>
 7d8:	00 00       	nop
		_delay_ms(66.67);
		
		PORTC =(1<<sw4);
 7da:	48 b8       	out	0x08, r4	; 8
		PORTB = num[decimalPart/1 %10];
 7dc:	89 81       	ldd	r24, Y+1	; 0x01
 7de:	9a 81       	ldd	r25, Y+2	; 0x02
 7e0:	6a e0       	ldi	r22, 0x0A	; 10
 7e2:	70 e0       	ldi	r23, 0x00	; 0
 7e4:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodhi4>
 7e8:	fc 01       	movw	r30, r24
 7ea:	ec 5f       	subi	r30, 0xFC	; 252
 7ec:	fe 4f       	sbci	r31, 0xFE	; 254
 7ee:	80 81       	ld	r24, Z
 7f0:	85 b9       	out	0x05, r24	; 5
 7f2:	8f e4       	ldi	r24, 0x4F	; 79
 7f4:	93 ec       	ldi	r25, 0xC3	; 195
 7f6:	01 97       	sbiw	r24, 0x01	; 1
 7f8:	f1 f7       	brne	.-4      	; 0x7f6 <displayFaran+0x26c>
 7fa:	00 c0       	rjmp	.+0      	; 0x7fc <displayFaran+0x272>
 7fc:	00 00       	nop



void displayFaran(float b){
		
for(int j;j<20;j++){
 7fe:	0f 5f       	subi	r16, 0xFF	; 255
 800:	1f 4f       	sbci	r17, 0xFF	; 255
 802:	04 31       	cpi	r16, 0x14	; 20
 804:	11 05       	cpc	r17, r1
 806:	09 f0       	breq	.+2      	; 0x80a <displayFaran+0x280>
 808:	ef ce       	rjmp	.-546    	; 0x5e8 <displayFaran+0x5e>
		
		
		
	}
}
}
 80a:	0f 90       	pop	r0
 80c:	0f 90       	pop	r0
 80e:	df 91       	pop	r29
 810:	cf 91       	pop	r28
 812:	1f 91       	pop	r17
 814:	0f 91       	pop	r16
 816:	ff 90       	pop	r15
 818:	ef 90       	pop	r14
 81a:	df 90       	pop	r13
 81c:	cf 90       	pop	r12
 81e:	bf 90       	pop	r11
 820:	af 90       	pop	r10
 822:	9f 90       	pop	r9
 824:	8f 90       	pop	r8
 826:	7f 90       	pop	r7
 828:	6f 90       	pop	r6
 82a:	5f 90       	pop	r5
 82c:	4f 90       	pop	r4
 82e:	3f 90       	pop	r3
 830:	2f 90       	pop	r2
 832:	08 95       	ret

00000834 <run>:


void run(){
 834:	cf 92       	push	r12
 836:	df 92       	push	r13
 838:	ef 92       	push	r14
 83a:	ff 92       	push	r15
		

		b = count * 9.0 / 5.0 + 32.0;
 83c:	c0 90 12 01 	lds	r12, 0x0112	; 0x800112 <count>
 840:	d0 90 13 01 	lds	r13, 0x0113	; 0x800113 <count+0x1>
 844:	e0 90 14 01 	lds	r14, 0x0114	; 0x800114 <count+0x2>
 848:	f0 90 15 01 	lds	r15, 0x0115	; 0x800115 <count+0x3>
 84c:	20 e0       	ldi	r18, 0x00	; 0
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	40 e1       	ldi	r20, 0x10	; 16
 852:	51 e4       	ldi	r21, 0x41	; 65
 854:	c7 01       	movw	r24, r14
 856:	b6 01       	movw	r22, r12
 858:	0e 94 ef 05 	call	0xbde	; 0xbde <__mulsf3>
 85c:	20 e0       	ldi	r18, 0x00	; 0
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	40 ea       	ldi	r20, 0xA0	; 160
 862:	50 e4       	ldi	r21, 0x40	; 64
 864:	0e 94 cd 04 	call	0x99a	; 0x99a <__divsf3>
 868:	20 e0       	ldi	r18, 0x00	; 0
 86a:	30 e0       	ldi	r19, 0x00	; 0
 86c:	40 e0       	ldi	r20, 0x00	; 0
 86e:	52 e4       	ldi	r21, 0x42	; 66
 870:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__addsf3>
 874:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 878:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 87c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 880:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
		
		
		displayCellsius(count);
 884:	c7 01       	movw	r24, r14
 886:	b6 01       	movw	r22, r12
 888:	0e 94 ff 00 	call	0x1fe	; 0x1fe <displayCellsius>
		
		displayFaran(b);
 88c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 890:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
 894:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
 898:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
 89c:	0e 94 c5 02 	call	0x58a	; 0x58a <displayFaran>
		
		
			
		
	
}
 8a0:	ff 90       	pop	r15
 8a2:	ef 90       	pop	r14
 8a4:	df 90       	pop	r13
 8a6:	cf 90       	pop	r12
 8a8:	08 95       	ret

000008aa <main>:


int main(void)
{
	setup();
 8aa:	0e 94 53 00 	call	0xa6	; 0xa6 <setup>
	PORTD |=(1<<BUTTON_PIN3);
 8ae:	5c 9a       	sbi	0x0b, 4	; 11
	while(1){
	run();
 8b0:	0e 94 1a 04 	call	0x834	; 0x834 <run>
 8b4:	fd cf       	rjmp	.-6      	; 0x8b0 <main+0x6>

000008b6 <__subsf3>:
 8b6:	50 58       	subi	r21, 0x80	; 128

000008b8 <__addsf3>:
 8b8:	bb 27       	eor	r27, r27
 8ba:	aa 27       	eor	r26, r26
 8bc:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__addsf3x>
 8c0:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__fp_round>
 8c4:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_pscA>
 8c8:	38 f0       	brcs	.+14     	; 0x8d8 <__addsf3+0x20>
 8ca:	0e 94 a9 05 	call	0xb52	; 0xb52 <__fp_pscB>
 8ce:	20 f0       	brcs	.+8      	; 0x8d8 <__addsf3+0x20>
 8d0:	39 f4       	brne	.+14     	; 0x8e0 <__addsf3+0x28>
 8d2:	9f 3f       	cpi	r25, 0xFF	; 255
 8d4:	19 f4       	brne	.+6      	; 0x8dc <__addsf3+0x24>
 8d6:	26 f4       	brtc	.+8      	; 0x8e0 <__addsf3+0x28>
 8d8:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>
 8dc:	0e f4       	brtc	.+2      	; 0x8e0 <__addsf3+0x28>
 8de:	e0 95       	com	r30
 8e0:	e7 fb       	bst	r30, 7
 8e2:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>

000008e6 <__addsf3x>:
 8e6:	e9 2f       	mov	r30, r25
 8e8:	0e 94 c1 05 	call	0xb82	; 0xb82 <__fp_split3>
 8ec:	58 f3       	brcs	.-42     	; 0x8c4 <__addsf3+0xc>
 8ee:	ba 17       	cp	r27, r26
 8f0:	62 07       	cpc	r22, r18
 8f2:	73 07       	cpc	r23, r19
 8f4:	84 07       	cpc	r24, r20
 8f6:	95 07       	cpc	r25, r21
 8f8:	20 f0       	brcs	.+8      	; 0x902 <__stack+0x3>
 8fa:	79 f4       	brne	.+30     	; 0x91a <__stack+0x1b>
 8fc:	a6 f5       	brtc	.+104    	; 0x966 <__stack+0x67>
 8fe:	0c 94 e3 05 	jmp	0xbc6	; 0xbc6 <__fp_zero>
 902:	0e f4       	brtc	.+2      	; 0x906 <__stack+0x7>
 904:	e0 95       	com	r30
 906:	0b 2e       	mov	r0, r27
 908:	ba 2f       	mov	r27, r26
 90a:	a0 2d       	mov	r26, r0
 90c:	0b 01       	movw	r0, r22
 90e:	b9 01       	movw	r22, r18
 910:	90 01       	movw	r18, r0
 912:	0c 01       	movw	r0, r24
 914:	ca 01       	movw	r24, r20
 916:	a0 01       	movw	r20, r0
 918:	11 24       	eor	r1, r1
 91a:	ff 27       	eor	r31, r31
 91c:	59 1b       	sub	r21, r25
 91e:	99 f0       	breq	.+38     	; 0x946 <__stack+0x47>
 920:	59 3f       	cpi	r21, 0xF9	; 249
 922:	50 f4       	brcc	.+20     	; 0x938 <__stack+0x39>
 924:	50 3e       	cpi	r21, 0xE0	; 224
 926:	68 f1       	brcs	.+90     	; 0x982 <__stack+0x83>
 928:	1a 16       	cp	r1, r26
 92a:	f0 40       	sbci	r31, 0x00	; 0
 92c:	a2 2f       	mov	r26, r18
 92e:	23 2f       	mov	r18, r19
 930:	34 2f       	mov	r19, r20
 932:	44 27       	eor	r20, r20
 934:	58 5f       	subi	r21, 0xF8	; 248
 936:	f3 cf       	rjmp	.-26     	; 0x91e <__stack+0x1f>
 938:	46 95       	lsr	r20
 93a:	37 95       	ror	r19
 93c:	27 95       	ror	r18
 93e:	a7 95       	ror	r26
 940:	f0 40       	sbci	r31, 0x00	; 0
 942:	53 95       	inc	r21
 944:	c9 f7       	brne	.-14     	; 0x938 <__stack+0x39>
 946:	7e f4       	brtc	.+30     	; 0x966 <__stack+0x67>
 948:	1f 16       	cp	r1, r31
 94a:	ba 0b       	sbc	r27, r26
 94c:	62 0b       	sbc	r22, r18
 94e:	73 0b       	sbc	r23, r19
 950:	84 0b       	sbc	r24, r20
 952:	ba f0       	brmi	.+46     	; 0x982 <__stack+0x83>
 954:	91 50       	subi	r25, 0x01	; 1
 956:	a1 f0       	breq	.+40     	; 0x980 <__stack+0x81>
 958:	ff 0f       	add	r31, r31
 95a:	bb 1f       	adc	r27, r27
 95c:	66 1f       	adc	r22, r22
 95e:	77 1f       	adc	r23, r23
 960:	88 1f       	adc	r24, r24
 962:	c2 f7       	brpl	.-16     	; 0x954 <__stack+0x55>
 964:	0e c0       	rjmp	.+28     	; 0x982 <__stack+0x83>
 966:	ba 0f       	add	r27, r26
 968:	62 1f       	adc	r22, r18
 96a:	73 1f       	adc	r23, r19
 96c:	84 1f       	adc	r24, r20
 96e:	48 f4       	brcc	.+18     	; 0x982 <__stack+0x83>
 970:	87 95       	ror	r24
 972:	77 95       	ror	r23
 974:	67 95       	ror	r22
 976:	b7 95       	ror	r27
 978:	f7 95       	ror	r31
 97a:	9e 3f       	cpi	r25, 0xFE	; 254
 97c:	08 f0       	brcs	.+2      	; 0x980 <__stack+0x81>
 97e:	b0 cf       	rjmp	.-160    	; 0x8e0 <__addsf3+0x28>
 980:	93 95       	inc	r25
 982:	88 0f       	add	r24, r24
 984:	08 f0       	brcs	.+2      	; 0x988 <__stack+0x89>
 986:	99 27       	eor	r25, r25
 988:	ee 0f       	add	r30, r30
 98a:	97 95       	ror	r25
 98c:	87 95       	ror	r24
 98e:	08 95       	ret

00000990 <__cmpsf2>:
 990:	0e 94 75 05 	call	0xaea	; 0xaea <__fp_cmp>
 994:	08 f4       	brcc	.+2      	; 0x998 <__cmpsf2+0x8>
 996:	81 e0       	ldi	r24, 0x01	; 1
 998:	08 95       	ret

0000099a <__divsf3>:
 99a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__divsf3x>
 99e:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__fp_round>
 9a2:	0e 94 a9 05 	call	0xb52	; 0xb52 <__fp_pscB>
 9a6:	58 f0       	brcs	.+22     	; 0x9be <__divsf3+0x24>
 9a8:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_pscA>
 9ac:	40 f0       	brcs	.+16     	; 0x9be <__divsf3+0x24>
 9ae:	29 f4       	brne	.+10     	; 0x9ba <__divsf3+0x20>
 9b0:	5f 3f       	cpi	r21, 0xFF	; 255
 9b2:	29 f0       	breq	.+10     	; 0x9be <__divsf3+0x24>
 9b4:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
 9b8:	51 11       	cpse	r21, r1
 9ba:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_szero>
 9be:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>

000009c2 <__divsf3x>:
 9c2:	0e 94 c1 05 	call	0xb82	; 0xb82 <__fp_split3>
 9c6:	68 f3       	brcs	.-38     	; 0x9a2 <__divsf3+0x8>

000009c8 <__divsf3_pse>:
 9c8:	99 23       	and	r25, r25
 9ca:	b1 f3       	breq	.-20     	; 0x9b8 <__divsf3+0x1e>
 9cc:	55 23       	and	r21, r21
 9ce:	91 f3       	breq	.-28     	; 0x9b4 <__divsf3+0x1a>
 9d0:	95 1b       	sub	r25, r21
 9d2:	55 0b       	sbc	r21, r21
 9d4:	bb 27       	eor	r27, r27
 9d6:	aa 27       	eor	r26, r26
 9d8:	62 17       	cp	r22, r18
 9da:	73 07       	cpc	r23, r19
 9dc:	84 07       	cpc	r24, r20
 9de:	38 f0       	brcs	.+14     	; 0x9ee <__divsf3_pse+0x26>
 9e0:	9f 5f       	subi	r25, 0xFF	; 255
 9e2:	5f 4f       	sbci	r21, 0xFF	; 255
 9e4:	22 0f       	add	r18, r18
 9e6:	33 1f       	adc	r19, r19
 9e8:	44 1f       	adc	r20, r20
 9ea:	aa 1f       	adc	r26, r26
 9ec:	a9 f3       	breq	.-22     	; 0x9d8 <__divsf3_pse+0x10>
 9ee:	35 d0       	rcall	.+106    	; 0xa5a <__divsf3_pse+0x92>
 9f0:	0e 2e       	mov	r0, r30
 9f2:	3a f0       	brmi	.+14     	; 0xa02 <__divsf3_pse+0x3a>
 9f4:	e0 e8       	ldi	r30, 0x80	; 128
 9f6:	32 d0       	rcall	.+100    	; 0xa5c <__divsf3_pse+0x94>
 9f8:	91 50       	subi	r25, 0x01	; 1
 9fa:	50 40       	sbci	r21, 0x00	; 0
 9fc:	e6 95       	lsr	r30
 9fe:	00 1c       	adc	r0, r0
 a00:	ca f7       	brpl	.-14     	; 0x9f4 <__divsf3_pse+0x2c>
 a02:	2b d0       	rcall	.+86     	; 0xa5a <__divsf3_pse+0x92>
 a04:	fe 2f       	mov	r31, r30
 a06:	29 d0       	rcall	.+82     	; 0xa5a <__divsf3_pse+0x92>
 a08:	66 0f       	add	r22, r22
 a0a:	77 1f       	adc	r23, r23
 a0c:	88 1f       	adc	r24, r24
 a0e:	bb 1f       	adc	r27, r27
 a10:	26 17       	cp	r18, r22
 a12:	37 07       	cpc	r19, r23
 a14:	48 07       	cpc	r20, r24
 a16:	ab 07       	cpc	r26, r27
 a18:	b0 e8       	ldi	r27, 0x80	; 128
 a1a:	09 f0       	breq	.+2      	; 0xa1e <__divsf3_pse+0x56>
 a1c:	bb 0b       	sbc	r27, r27
 a1e:	80 2d       	mov	r24, r0
 a20:	bf 01       	movw	r22, r30
 a22:	ff 27       	eor	r31, r31
 a24:	93 58       	subi	r25, 0x83	; 131
 a26:	5f 4f       	sbci	r21, 0xFF	; 255
 a28:	3a f0       	brmi	.+14     	; 0xa38 <__divsf3_pse+0x70>
 a2a:	9e 3f       	cpi	r25, 0xFE	; 254
 a2c:	51 05       	cpc	r21, r1
 a2e:	78 f0       	brcs	.+30     	; 0xa4e <__divsf3_pse+0x86>
 a30:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
 a34:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_szero>
 a38:	5f 3f       	cpi	r21, 0xFF	; 255
 a3a:	e4 f3       	brlt	.-8      	; 0xa34 <__divsf3_pse+0x6c>
 a3c:	98 3e       	cpi	r25, 0xE8	; 232
 a3e:	d4 f3       	brlt	.-12     	; 0xa34 <__divsf3_pse+0x6c>
 a40:	86 95       	lsr	r24
 a42:	77 95       	ror	r23
 a44:	67 95       	ror	r22
 a46:	b7 95       	ror	r27
 a48:	f7 95       	ror	r31
 a4a:	9f 5f       	subi	r25, 0xFF	; 255
 a4c:	c9 f7       	brne	.-14     	; 0xa40 <__divsf3_pse+0x78>
 a4e:	88 0f       	add	r24, r24
 a50:	91 1d       	adc	r25, r1
 a52:	96 95       	lsr	r25
 a54:	87 95       	ror	r24
 a56:	97 f9       	bld	r25, 7
 a58:	08 95       	ret
 a5a:	e1 e0       	ldi	r30, 0x01	; 1
 a5c:	66 0f       	add	r22, r22
 a5e:	77 1f       	adc	r23, r23
 a60:	88 1f       	adc	r24, r24
 a62:	bb 1f       	adc	r27, r27
 a64:	62 17       	cp	r22, r18
 a66:	73 07       	cpc	r23, r19
 a68:	84 07       	cpc	r24, r20
 a6a:	ba 07       	cpc	r27, r26
 a6c:	20 f0       	brcs	.+8      	; 0xa76 <__divsf3_pse+0xae>
 a6e:	62 1b       	sub	r22, r18
 a70:	73 0b       	sbc	r23, r19
 a72:	84 0b       	sbc	r24, r20
 a74:	ba 0b       	sbc	r27, r26
 a76:	ee 1f       	adc	r30, r30
 a78:	88 f7       	brcc	.-30     	; 0xa5c <__divsf3_pse+0x94>
 a7a:	e0 95       	com	r30
 a7c:	08 95       	ret

00000a7e <__fixsfsi>:
 a7e:	0e 94 46 05 	call	0xa8c	; 0xa8c <__fixunssfsi>
 a82:	68 94       	set
 a84:	b1 11       	cpse	r27, r1
 a86:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_szero>
 a8a:	08 95       	ret

00000a8c <__fixunssfsi>:
 a8c:	0e 94 c9 05 	call	0xb92	; 0xb92 <__fp_splitA>
 a90:	88 f0       	brcs	.+34     	; 0xab4 <__fixunssfsi+0x28>
 a92:	9f 57       	subi	r25, 0x7F	; 127
 a94:	98 f0       	brcs	.+38     	; 0xabc <__fixunssfsi+0x30>
 a96:	b9 2f       	mov	r27, r25
 a98:	99 27       	eor	r25, r25
 a9a:	b7 51       	subi	r27, 0x17	; 23
 a9c:	b0 f0       	brcs	.+44     	; 0xaca <__fixunssfsi+0x3e>
 a9e:	e1 f0       	breq	.+56     	; 0xad8 <__fixunssfsi+0x4c>
 aa0:	66 0f       	add	r22, r22
 aa2:	77 1f       	adc	r23, r23
 aa4:	88 1f       	adc	r24, r24
 aa6:	99 1f       	adc	r25, r25
 aa8:	1a f0       	brmi	.+6      	; 0xab0 <__fixunssfsi+0x24>
 aaa:	ba 95       	dec	r27
 aac:	c9 f7       	brne	.-14     	; 0xaa0 <__fixunssfsi+0x14>
 aae:	14 c0       	rjmp	.+40     	; 0xad8 <__fixunssfsi+0x4c>
 ab0:	b1 30       	cpi	r27, 0x01	; 1
 ab2:	91 f0       	breq	.+36     	; 0xad8 <__fixunssfsi+0x4c>
 ab4:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__fp_zero>
 ab8:	b1 e0       	ldi	r27, 0x01	; 1
 aba:	08 95       	ret
 abc:	0c 94 e3 05 	jmp	0xbc6	; 0xbc6 <__fp_zero>
 ac0:	67 2f       	mov	r22, r23
 ac2:	78 2f       	mov	r23, r24
 ac4:	88 27       	eor	r24, r24
 ac6:	b8 5f       	subi	r27, 0xF8	; 248
 ac8:	39 f0       	breq	.+14     	; 0xad8 <__fixunssfsi+0x4c>
 aca:	b9 3f       	cpi	r27, 0xF9	; 249
 acc:	cc f3       	brlt	.-14     	; 0xac0 <__fixunssfsi+0x34>
 ace:	86 95       	lsr	r24
 ad0:	77 95       	ror	r23
 ad2:	67 95       	ror	r22
 ad4:	b3 95       	inc	r27
 ad6:	d9 f7       	brne	.-10     	; 0xace <__fixunssfsi+0x42>
 ad8:	3e f4       	brtc	.+14     	; 0xae8 <__fixunssfsi+0x5c>
 ada:	90 95       	com	r25
 adc:	80 95       	com	r24
 ade:	70 95       	com	r23
 ae0:	61 95       	neg	r22
 ae2:	7f 4f       	sbci	r23, 0xFF	; 255
 ae4:	8f 4f       	sbci	r24, 0xFF	; 255
 ae6:	9f 4f       	sbci	r25, 0xFF	; 255
 ae8:	08 95       	ret

00000aea <__fp_cmp>:
 aea:	99 0f       	add	r25, r25
 aec:	00 08       	sbc	r0, r0
 aee:	55 0f       	add	r21, r21
 af0:	aa 0b       	sbc	r26, r26
 af2:	e0 e8       	ldi	r30, 0x80	; 128
 af4:	fe ef       	ldi	r31, 0xFE	; 254
 af6:	16 16       	cp	r1, r22
 af8:	17 06       	cpc	r1, r23
 afa:	e8 07       	cpc	r30, r24
 afc:	f9 07       	cpc	r31, r25
 afe:	c0 f0       	brcs	.+48     	; 0xb30 <__fp_cmp+0x46>
 b00:	12 16       	cp	r1, r18
 b02:	13 06       	cpc	r1, r19
 b04:	e4 07       	cpc	r30, r20
 b06:	f5 07       	cpc	r31, r21
 b08:	98 f0       	brcs	.+38     	; 0xb30 <__fp_cmp+0x46>
 b0a:	62 1b       	sub	r22, r18
 b0c:	73 0b       	sbc	r23, r19
 b0e:	84 0b       	sbc	r24, r20
 b10:	95 0b       	sbc	r25, r21
 b12:	39 f4       	brne	.+14     	; 0xb22 <__fp_cmp+0x38>
 b14:	0a 26       	eor	r0, r26
 b16:	61 f0       	breq	.+24     	; 0xb30 <__fp_cmp+0x46>
 b18:	23 2b       	or	r18, r19
 b1a:	24 2b       	or	r18, r20
 b1c:	25 2b       	or	r18, r21
 b1e:	21 f4       	brne	.+8      	; 0xb28 <__fp_cmp+0x3e>
 b20:	08 95       	ret
 b22:	0a 26       	eor	r0, r26
 b24:	09 f4       	brne	.+2      	; 0xb28 <__fp_cmp+0x3e>
 b26:	a1 40       	sbci	r26, 0x01	; 1
 b28:	a6 95       	lsr	r26
 b2a:	8f ef       	ldi	r24, 0xFF	; 255
 b2c:	81 1d       	adc	r24, r1
 b2e:	81 1d       	adc	r24, r1
 b30:	08 95       	ret

00000b32 <__fp_inf>:
 b32:	97 f9       	bld	r25, 7
 b34:	9f 67       	ori	r25, 0x7F	; 127
 b36:	80 e8       	ldi	r24, 0x80	; 128
 b38:	70 e0       	ldi	r23, 0x00	; 0
 b3a:	60 e0       	ldi	r22, 0x00	; 0
 b3c:	08 95       	ret

00000b3e <__fp_nan>:
 b3e:	9f ef       	ldi	r25, 0xFF	; 255
 b40:	80 ec       	ldi	r24, 0xC0	; 192
 b42:	08 95       	ret

00000b44 <__fp_pscA>:
 b44:	00 24       	eor	r0, r0
 b46:	0a 94       	dec	r0
 b48:	16 16       	cp	r1, r22
 b4a:	17 06       	cpc	r1, r23
 b4c:	18 06       	cpc	r1, r24
 b4e:	09 06       	cpc	r0, r25
 b50:	08 95       	ret

00000b52 <__fp_pscB>:
 b52:	00 24       	eor	r0, r0
 b54:	0a 94       	dec	r0
 b56:	12 16       	cp	r1, r18
 b58:	13 06       	cpc	r1, r19
 b5a:	14 06       	cpc	r1, r20
 b5c:	05 06       	cpc	r0, r21
 b5e:	08 95       	ret

00000b60 <__fp_round>:
 b60:	09 2e       	mov	r0, r25
 b62:	03 94       	inc	r0
 b64:	00 0c       	add	r0, r0
 b66:	11 f4       	brne	.+4      	; 0xb6c <__fp_round+0xc>
 b68:	88 23       	and	r24, r24
 b6a:	52 f0       	brmi	.+20     	; 0xb80 <__fp_round+0x20>
 b6c:	bb 0f       	add	r27, r27
 b6e:	40 f4       	brcc	.+16     	; 0xb80 <__fp_round+0x20>
 b70:	bf 2b       	or	r27, r31
 b72:	11 f4       	brne	.+4      	; 0xb78 <__fp_round+0x18>
 b74:	60 ff       	sbrs	r22, 0
 b76:	04 c0       	rjmp	.+8      	; 0xb80 <__fp_round+0x20>
 b78:	6f 5f       	subi	r22, 0xFF	; 255
 b7a:	7f 4f       	sbci	r23, 0xFF	; 255
 b7c:	8f 4f       	sbci	r24, 0xFF	; 255
 b7e:	9f 4f       	sbci	r25, 0xFF	; 255
 b80:	08 95       	ret

00000b82 <__fp_split3>:
 b82:	57 fd       	sbrc	r21, 7
 b84:	90 58       	subi	r25, 0x80	; 128
 b86:	44 0f       	add	r20, r20
 b88:	55 1f       	adc	r21, r21
 b8a:	59 f0       	breq	.+22     	; 0xba2 <__fp_splitA+0x10>
 b8c:	5f 3f       	cpi	r21, 0xFF	; 255
 b8e:	71 f0       	breq	.+28     	; 0xbac <__fp_splitA+0x1a>
 b90:	47 95       	ror	r20

00000b92 <__fp_splitA>:
 b92:	88 0f       	add	r24, r24
 b94:	97 fb       	bst	r25, 7
 b96:	99 1f       	adc	r25, r25
 b98:	61 f0       	breq	.+24     	; 0xbb2 <__fp_splitA+0x20>
 b9a:	9f 3f       	cpi	r25, 0xFF	; 255
 b9c:	79 f0       	breq	.+30     	; 0xbbc <__fp_splitA+0x2a>
 b9e:	87 95       	ror	r24
 ba0:	08 95       	ret
 ba2:	12 16       	cp	r1, r18
 ba4:	13 06       	cpc	r1, r19
 ba6:	14 06       	cpc	r1, r20
 ba8:	55 1f       	adc	r21, r21
 baa:	f2 cf       	rjmp	.-28     	; 0xb90 <__fp_split3+0xe>
 bac:	46 95       	lsr	r20
 bae:	f1 df       	rcall	.-30     	; 0xb92 <__fp_splitA>
 bb0:	08 c0       	rjmp	.+16     	; 0xbc2 <__fp_splitA+0x30>
 bb2:	16 16       	cp	r1, r22
 bb4:	17 06       	cpc	r1, r23
 bb6:	18 06       	cpc	r1, r24
 bb8:	99 1f       	adc	r25, r25
 bba:	f1 cf       	rjmp	.-30     	; 0xb9e <__fp_splitA+0xc>
 bbc:	86 95       	lsr	r24
 bbe:	71 05       	cpc	r23, r1
 bc0:	61 05       	cpc	r22, r1
 bc2:	08 94       	sec
 bc4:	08 95       	ret

00000bc6 <__fp_zero>:
 bc6:	e8 94       	clt

00000bc8 <__fp_szero>:
 bc8:	bb 27       	eor	r27, r27
 bca:	66 27       	eor	r22, r22
 bcc:	77 27       	eor	r23, r23
 bce:	cb 01       	movw	r24, r22
 bd0:	97 f9       	bld	r25, 7
 bd2:	08 95       	ret

00000bd4 <__gesf2>:
 bd4:	0e 94 75 05 	call	0xaea	; 0xaea <__fp_cmp>
 bd8:	08 f4       	brcc	.+2      	; 0xbdc <__gesf2+0x8>
 bda:	8f ef       	ldi	r24, 0xFF	; 255
 bdc:	08 95       	ret

00000bde <__mulsf3>:
 bde:	0e 94 02 06 	call	0xc04	; 0xc04 <__mulsf3x>
 be2:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__fp_round>
 be6:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_pscA>
 bea:	38 f0       	brcs	.+14     	; 0xbfa <__mulsf3+0x1c>
 bec:	0e 94 a9 05 	call	0xb52	; 0xb52 <__fp_pscB>
 bf0:	20 f0       	brcs	.+8      	; 0xbfa <__mulsf3+0x1c>
 bf2:	95 23       	and	r25, r21
 bf4:	11 f0       	breq	.+4      	; 0xbfa <__mulsf3+0x1c>
 bf6:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
 bfa:	0c 94 9f 05 	jmp	0xb3e	; 0xb3e <__fp_nan>
 bfe:	11 24       	eor	r1, r1
 c00:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_szero>

00000c04 <__mulsf3x>:
 c04:	0e 94 c1 05 	call	0xb82	; 0xb82 <__fp_split3>
 c08:	70 f3       	brcs	.-36     	; 0xbe6 <__mulsf3+0x8>

00000c0a <__mulsf3_pse>:
 c0a:	95 9f       	mul	r25, r21
 c0c:	c1 f3       	breq	.-16     	; 0xbfe <__mulsf3+0x20>
 c0e:	95 0f       	add	r25, r21
 c10:	50 e0       	ldi	r21, 0x00	; 0
 c12:	55 1f       	adc	r21, r21
 c14:	62 9f       	mul	r22, r18
 c16:	f0 01       	movw	r30, r0
 c18:	72 9f       	mul	r23, r18
 c1a:	bb 27       	eor	r27, r27
 c1c:	f0 0d       	add	r31, r0
 c1e:	b1 1d       	adc	r27, r1
 c20:	63 9f       	mul	r22, r19
 c22:	aa 27       	eor	r26, r26
 c24:	f0 0d       	add	r31, r0
 c26:	b1 1d       	adc	r27, r1
 c28:	aa 1f       	adc	r26, r26
 c2a:	64 9f       	mul	r22, r20
 c2c:	66 27       	eor	r22, r22
 c2e:	b0 0d       	add	r27, r0
 c30:	a1 1d       	adc	r26, r1
 c32:	66 1f       	adc	r22, r22
 c34:	82 9f       	mul	r24, r18
 c36:	22 27       	eor	r18, r18
 c38:	b0 0d       	add	r27, r0
 c3a:	a1 1d       	adc	r26, r1
 c3c:	62 1f       	adc	r22, r18
 c3e:	73 9f       	mul	r23, r19
 c40:	b0 0d       	add	r27, r0
 c42:	a1 1d       	adc	r26, r1
 c44:	62 1f       	adc	r22, r18
 c46:	83 9f       	mul	r24, r19
 c48:	a0 0d       	add	r26, r0
 c4a:	61 1d       	adc	r22, r1
 c4c:	22 1f       	adc	r18, r18
 c4e:	74 9f       	mul	r23, r20
 c50:	33 27       	eor	r19, r19
 c52:	a0 0d       	add	r26, r0
 c54:	61 1d       	adc	r22, r1
 c56:	23 1f       	adc	r18, r19
 c58:	84 9f       	mul	r24, r20
 c5a:	60 0d       	add	r22, r0
 c5c:	21 1d       	adc	r18, r1
 c5e:	82 2f       	mov	r24, r18
 c60:	76 2f       	mov	r23, r22
 c62:	6a 2f       	mov	r22, r26
 c64:	11 24       	eor	r1, r1
 c66:	9f 57       	subi	r25, 0x7F	; 127
 c68:	50 40       	sbci	r21, 0x00	; 0
 c6a:	9a f0       	brmi	.+38     	; 0xc92 <__mulsf3_pse+0x88>
 c6c:	f1 f0       	breq	.+60     	; 0xcaa <__mulsf3_pse+0xa0>
 c6e:	88 23       	and	r24, r24
 c70:	4a f0       	brmi	.+18     	; 0xc84 <__mulsf3_pse+0x7a>
 c72:	ee 0f       	add	r30, r30
 c74:	ff 1f       	adc	r31, r31
 c76:	bb 1f       	adc	r27, r27
 c78:	66 1f       	adc	r22, r22
 c7a:	77 1f       	adc	r23, r23
 c7c:	88 1f       	adc	r24, r24
 c7e:	91 50       	subi	r25, 0x01	; 1
 c80:	50 40       	sbci	r21, 0x00	; 0
 c82:	a9 f7       	brne	.-22     	; 0xc6e <__mulsf3_pse+0x64>
 c84:	9e 3f       	cpi	r25, 0xFE	; 254
 c86:	51 05       	cpc	r21, r1
 c88:	80 f0       	brcs	.+32     	; 0xcaa <__mulsf3_pse+0xa0>
 c8a:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__fp_inf>
 c8e:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__fp_szero>
 c92:	5f 3f       	cpi	r21, 0xFF	; 255
 c94:	e4 f3       	brlt	.-8      	; 0xc8e <__mulsf3_pse+0x84>
 c96:	98 3e       	cpi	r25, 0xE8	; 232
 c98:	d4 f3       	brlt	.-12     	; 0xc8e <__mulsf3_pse+0x84>
 c9a:	86 95       	lsr	r24
 c9c:	77 95       	ror	r23
 c9e:	67 95       	ror	r22
 ca0:	b7 95       	ror	r27
 ca2:	f7 95       	ror	r31
 ca4:	e7 95       	ror	r30
 ca6:	9f 5f       	subi	r25, 0xFF	; 255
 ca8:	c1 f7       	brne	.-16     	; 0xc9a <__mulsf3_pse+0x90>
 caa:	fe 2b       	or	r31, r30
 cac:	88 0f       	add	r24, r24
 cae:	91 1d       	adc	r25, r1
 cb0:	96 95       	lsr	r25
 cb2:	87 95       	ror	r24
 cb4:	97 f9       	bld	r25, 7
 cb6:	08 95       	ret

00000cb8 <__divmodhi4>:
 cb8:	97 fb       	bst	r25, 7
 cba:	07 2e       	mov	r0, r23
 cbc:	16 f4       	brtc	.+4      	; 0xcc2 <__divmodhi4+0xa>
 cbe:	00 94       	com	r0
 cc0:	07 d0       	rcall	.+14     	; 0xcd0 <__divmodhi4_neg1>
 cc2:	77 fd       	sbrc	r23, 7
 cc4:	09 d0       	rcall	.+18     	; 0xcd8 <__divmodhi4_neg2>
 cc6:	0e 94 70 06 	call	0xce0	; 0xce0 <__udivmodhi4>
 cca:	07 fc       	sbrc	r0, 7
 ccc:	05 d0       	rcall	.+10     	; 0xcd8 <__divmodhi4_neg2>
 cce:	3e f4       	brtc	.+14     	; 0xcde <__divmodhi4_exit>

00000cd0 <__divmodhi4_neg1>:
 cd0:	90 95       	com	r25
 cd2:	81 95       	neg	r24
 cd4:	9f 4f       	sbci	r25, 0xFF	; 255
 cd6:	08 95       	ret

00000cd8 <__divmodhi4_neg2>:
 cd8:	70 95       	com	r23
 cda:	61 95       	neg	r22
 cdc:	7f 4f       	sbci	r23, 0xFF	; 255

00000cde <__divmodhi4_exit>:
 cde:	08 95       	ret

00000ce0 <__udivmodhi4>:
 ce0:	aa 1b       	sub	r26, r26
 ce2:	bb 1b       	sub	r27, r27
 ce4:	51 e1       	ldi	r21, 0x11	; 17
 ce6:	07 c0       	rjmp	.+14     	; 0xcf6 <__udivmodhi4_ep>

00000ce8 <__udivmodhi4_loop>:
 ce8:	aa 1f       	adc	r26, r26
 cea:	bb 1f       	adc	r27, r27
 cec:	a6 17       	cp	r26, r22
 cee:	b7 07       	cpc	r27, r23
 cf0:	10 f0       	brcs	.+4      	; 0xcf6 <__udivmodhi4_ep>
 cf2:	a6 1b       	sub	r26, r22
 cf4:	b7 0b       	sbc	r27, r23

00000cf6 <__udivmodhi4_ep>:
 cf6:	88 1f       	adc	r24, r24
 cf8:	99 1f       	adc	r25, r25
 cfa:	5a 95       	dec	r21
 cfc:	a9 f7       	brne	.-22     	; 0xce8 <__udivmodhi4_loop>
 cfe:	80 95       	com	r24
 d00:	90 95       	com	r25
 d02:	bc 01       	movw	r22, r24
 d04:	cd 01       	movw	r24, r26
 d06:	08 95       	ret

00000d08 <_exit>:
 d08:	f8 94       	cli

00000d0a <__stop_program>:
 d0a:	ff cf       	rjmp	.-2      	; 0xd0a <__stop_program>
